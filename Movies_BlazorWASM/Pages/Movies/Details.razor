@page "/movies/details"
@inject NavigationManager NavigationManager
@inject MoviesClient MovieClient

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    @if (movie is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@movie.Title</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@movie.Description</dd>
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@movie.Category</dd>
            <dt class="col-sm-2">ReleaseDate</dt>
            <dd class="col-sm-10">@movie.ReleaseDate</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@movie.Price</dd>
        </dl>
        <div>
            <a href="@($"/movies/edit?id={movie.Id}")">Edit</a> |
            <a href="@($"/movies")">Back to List</a>
        </div>
    }
</div>

@code {

       MovieDto? movie;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await MovieClient.Movies.GetAsync();
        movie = result.MovieDtos.FirstOrDefault(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
