openapi: 3.0.1
info:
  title: movies.webapi v1
  version: '1'
servers:
  - url: https://localhost:7254/
paths:
  /movies:
    get:
      tags:
        - Movies
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMoviesResponse'
    post:
      tags:
        - Movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMovieRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /movies/paginated:
    get:
      tags:
        - Movies
      parameters:
        - name: pageNumber
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDto'
  '/movies/{id}':
    get:
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMovieByIdResponse'
    put:
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMovieRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
    delete:
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  /api/register:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /api/login:
    post:
      tags:
        - UserManagement
      parameters:
        - name: useCookies
          in: query
          style: form
          schema:
            type: boolean
        - name: useSessionCookies
          in: query
          style: form
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /api/refresh:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /api/confirmEmail:
    get:
      tags:
        - UserManagement
      operationId: MapIdentityApi-api/confirmEmail
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: string
        - name: code
          in: query
          style: form
          schema:
            type: string
        - name: changedEmail
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/resendConfirmationEmail:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendConfirmationEmailRequest'
      responses:
        '200':
          description: Success
  /api/forgotPassword:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /api/resetPassword:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
  /api/manage/2fa:
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
  /api/manage/info:
    get:
      tags:
        - UserManagement
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
    post:
      tags:
        - UserManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '404':
          description: Not Found
components:
  schemas:
    AccessTokenResponse:
      type: object
      properties:
        tokenType:
          type: string
          nullable: true
          readOnly: true
        accessToken:
          type: string
          nullable: true
        expiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    CreateMovieRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    GetMovieByIdResponse:
      type: object
      properties:
        movieDto:
          $ref: '#/components/schemas/MovieDto'
      additionalProperties: false
    GetMoviesResponse:
      type: object
      properties:
        movieDtos:
          type: array
          items:
            $ref: '#/components/schemas/MovieDto'
          nullable: true
      additionalProperties: false
    HttpValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: { }
    InfoRequest:
      type: object
      properties:
        newEmail:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
        oldPassword:
          type: string
          nullable: true
      additionalProperties: false
    InfoResponse:
      type: object
      properties:
        email:
          type: string
          nullable: true
        isEmailConfirmed:
          type: boolean
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        twoFactorCode:
          type: string
          nullable: true
        twoFactorRecoveryCode:
          type: string
          nullable: true
      additionalProperties: false
    MovieDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
          nullable: true
        price:
          type: number
          format: double
        createDate:
          type: string
          format: date-time
      additionalProperties: false
    RefreshRequest:
      type: object
      properties:
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    ResendConfirmationEmailRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        resetCode:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    TwoFactorRequest:
      type: object
      properties:
        enable:
          type: boolean
          nullable: true
        twoFactorCode:
          type: string
          nullable: true
        resetSharedKey:
          type: boolean
        resetRecoveryCodes:
          type: boolean
        forgetMachine:
          type: boolean
      additionalProperties: false
    TwoFactorResponse:
      type: object
      properties:
        sharedKey:
          type: string
          nullable: true
        recoveryCodesLeft:
          type: integer
          format: int32
        recoveryCodes:
          type: array
          items:
            type: string
          nullable: true
        isTwoFactorEnabled:
          type: boolean
        isMachineRemembered:
          type: boolean
      additionalProperties: false
    Unit:
      type: object
      additionalProperties: false
    UpdateMovieRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        releaseDate:
          type: string
          format: date-time
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Please enter ''Bearer [jwt]'''
      name: Authorization
      in: header
security:
  - Bearer: [ ]